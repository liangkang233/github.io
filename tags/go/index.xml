<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>go on LK233's Blog</title><link>https://liangkang233.github.io/tags/go/</link><description>Recent content in go on LK233's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>CC BY 4.0 CN</copyright><lastBuildDate>Tue, 01 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://liangkang233.github.io/tags/go/index.xml" rel="self" type="application/rss+xml"/><item><title>图分割工具metis</title><link>https://liangkang233.github.io/2023/03/%E5%9B%BE%E5%88%86%E5%89%B2%E5%B7%A5%E5%85%B7metis/</link><pubDate>Wed, 15 Mar 2023 00:00:00 +0000</pubDate><guid>https://liangkang233.github.io/2023/03/%E5%9B%BE%E5%88%86%E5%89%B2%E5%B7%A5%E5%85%B7metis/</guid><description>题外话 过年玩了下陶笛，入门真的很快🥳。 复刻了(毁原作)仙剑bgm回梦游仙 宝可梦未白镇 。这个网站不错，可以把陶笛的伴奏取出来 试吹下塞尔达的bg</description></item><item><title>Cgroups管理lxc容器小结</title><link>https://liangkang233.github.io/2022/11/lxc%E5%AE%B9%E5%99%A8%E8%B5%84%E6%BA%90%E7%AE%A1%E6%8E%A7%E4%B8%8E%E6%9F%A5%E8%AF%A2/</link><pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate><guid>https://liangkang233.github.io/2022/11/lxc%E5%AE%B9%E5%99%A8%E8%B5%84%E6%BA%90%E7%AE%A1%E6%8E%A7%E4%B8%8E%E6%9F%A5%E8%AF%A2/</guid><description>背景 最近在做关于 容器资源控制，所以具体分析下lxc容器和Cgroups。 其实之前就已经做过 lxc容器 和 docker容器 的区别 内容探讨，不过是</description></item><item><title>gRPC流、异步通信</title><link>https://liangkang233.github.io/2022/10/grpc%E6%B5%81%E5%8F%8A%E5%BC%82%E6%AD%A5%E7%9A%84%E5%AD%A6%E4%B9%A0/</link><pubDate>Thu, 27 Oct 2022 00:00:00 +0000</pubDate><guid>https://liangkang233.github.io/2022/10/grpc%E6%B5%81%E5%8F%8A%E5%BC%82%E6%AD%A5%E7%9A%84%E5%AD%A6%E4%B9%A0/</guid><description>背景 gRPC是谷歌开源的一套基于Http实现的rpc通讯框架，用 protobuf 实现传输数据的定义,其格式类似json。由于其实现了多平台，在不同编程语言</description></item><item><title>迷你桌面摆件</title><link>https://liangkang233.github.io/2022/08/%E6%A1%8C%E9%9D%A2%E6%91%86%E4%BB%B6/</link><pubDate>Wed, 17 Aug 2022 00:00:00 +0000</pubDate><guid>https://liangkang233.github.io/2022/08/%E6%A1%8C%E9%9D%A2%E6%91%86%E4%BB%B6/</guid><description>背景 最近刷B站 看到有人分享了个桌面摆件，看了下制作过程，原件不多 焊接也算简单。 想到之前买的 GC9A01 也没用上，正好自己复刻一个桌面摆件吧。 说干就干，</description></item><item><title>SRv6学习</title><link>https://liangkang233.github.io/2022/07/srv6%E5%AD%A6%E4%B9%A0/</link><pubDate>Mon, 18 Jul 2022 00:00:00 +0000</pubDate><guid>https://liangkang233.github.io/2022/07/srv6%E5%AD%A6%E4%B9%A0/</guid><description>最近在学习SRv6相关的知识, 实践方面参考这篇 使用 mininet的 博客。我这里使用 core 平台 搭建了个简易场景 体会 SRv6 整个数据的ip包的包装解析。二</description></item><item><title>Emane流程概述</title><link>https://liangkang233.github.io/2022/06/emane%E6%B5%81%E7%A8%8B%E6%A6%82%E8%BF%B0/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://liangkang233.github.io/2022/06/emane%E6%B5%81%E7%A8%8B%E6%A6%82%E8%BF%B0/</guid><description>背景 现在要继续做emane相关的开发，之前做tdma相关内容写了篇 Emane模型调研 ，现在想梳理下整个仿真器的仿真流程，记录下。 debug Emane 为了更好</description></item><item><title>Emane模型调研</title><link>https://liangkang233.github.io/2022/05/emane%E6%A8%A1%E5%9E%8B%E8%B0%83%E7%A0%94/</link><pubDate>Wed, 25 May 2022 00:00:00 +0000</pubDate><guid>https://liangkang233.github.io/2022/05/emane%E6%A8%A1%E5%9E%8B%E8%B0%83%E7%A0%94/</guid><description>Emane开发文档 Emane维基 Emane仿真架构： Emane仿真流程 ​ 当仿真器实例化模型插件（即读取模型配置文件platform.xml）</description></item><item><title>WSL docker 初探</title><link>https://liangkang233.github.io/2022/05/wsl%E5%88%9D%E6%8E%A2/</link><pubDate>Mon, 16 May 2022 00:00:00 +0000</pubDate><guid>https://liangkang233.github.io/2022/05/wsl%E5%88%9D%E6%8E%A2/</guid><description>之前安装docker时候惊讶其居然有windows版本的安装包，心想 docker 不是靠linux内核实现的资源控制空间隔离么，怎么会有windows版</description></item><item><title>工具推荐：语音识别 MD转换</title><link>https://liangkang233.github.io/2022/04/%E8%AF%AD%E9%9F%B3%E8%AF%86%E5%88%AB/</link><pubDate>Sat, 23 Apr 2022 00:00:00 +0000</pubDate><guid>https://liangkang233.github.io/2022/04/%E8%AF%AD%E9%9F%B3%E8%AF%86%E5%88%AB/</guid><description>推荐一些个人觉得比较好用的工具 语音识别工具 之前也分享过百度ai提供的api的SDk，虽然免费 但是不太够用。所以找了找有没有类似的替代品。这个</description></item><item><title>二分小结</title><link>https://liangkang233.github.io/2022/04/%E4%BA%8C%E5%88%86%E5%B0%8F%E7%BB%93/</link><pubDate>Sat, 02 Apr 2022 00:00:00 +0000</pubDate><guid>https://liangkang233.github.io/2022/04/%E4%BA%8C%E5%88%86%E5%B0%8F%E7%BB%93/</guid><description>刷题时总是写了又忘，所以专门整理了一个题目记录本。 刷题记录本 做到 二分算法 的专题时，对于其边界的处理非常棘手。所以写了这篇博客对二分的实现、应</description></item><item><title>Qmsg消息推送助手</title><link>https://liangkang233.github.io/2022/03/qmsg%E6%B6%88%E6%81%AF%E5%8A%A9%E6%89%8B/</link><pubDate>Tue, 01 Mar 2022 00:00:00 +0000</pubDate><guid>https://liangkang233.github.io/2022/03/qmsg%E6%B6%88%E6%81%AF%E5%8A%A9%E6%89%8B/</guid><description>发现一个简易的使用qq推送消息的工具，原本打算用来做网盘的提醒助手，最后放弃了。 不过感觉这个玩具挺好玩的，做个记录。 Qmsg首页 qq登录即注</description></item><item><title>Quagga 调试记录</title><link>https://liangkang233.github.io/2022/02/quagga%E8%B0%83%E8%AF%95%E8%AE%B0%E5%BD%95/</link><pubDate>Wed, 02 Feb 2022 00:00:00 +0000</pubDate><guid>https://liangkang233.github.io/2022/02/quagga%E8%B0%83%E8%AF%95%E8%AE%B0%E5%BD%95/</guid><description>本篇博客转载自奎爷 👀 背景 Quagga是一个开源的、基 于Zebra的、实现了RIP, OSPF, BGP的动态路由软件。它提供的CL命令和Cisco IOS</description></item><item><title>树 相关结构 (TODO)</title><link>https://liangkang233.github.io/2022/01/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E6%A0%91%E7%9B%B8%E5%85%B3/</link><pubDate>Fri, 07 Jan 2022 00:00:00 +0000</pubDate><guid>https://liangkang233.github.io/2022/01/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E6%A0%91%E7%9B%B8%E5%85%B3/</guid><description>树的概念 树由有限个节点，组成具有层次关系的集合。每个结点或者无子结点或者只有有限个子结点; 有一个特殊的结点,它没有父结点，称为根结点。每一个</description></item><item><title>Docker容器相关</title><link>https://liangkang233.github.io/2021/12/%E5%AE%B9%E5%99%A8%E7%9B%B8%E5%85%B3/</link><pubDate>Fri, 24 Dec 2021 00:00:00 +0000</pubDate><guid>https://liangkang233.github.io/2021/12/%E5%AE%B9%E5%99%A8%E7%9B%B8%E5%85%B3/</guid><description>Docker 、Lxc介绍 docker是一个比较成熟好用的开源免费应用容器引擎，用于在一个集中的平台上创建、部署和工作应用程序。这使得主机的操作系统通过</description></item><item><title>OVS 学习笔记</title><link>https://liangkang233.github.io/2021/12/ovs%E5%AD%A6%E4%B9%A0/</link><pubDate>Sun, 12 Dec 2021 00:00:00 +0000</pubDate><guid>https://liangkang233.github.io/2021/12/ovs%E5%AD%A6%E4%B9%A0/</guid><description>OVS 介绍 Open virtual Switch 是一个在 Apache2许可授权的 开源多层软件交换机。目标是实现一个产品质量的交换机平台，支持标准的管理接口，并开放转发功能，以供</description></item><item><title>华为云服务器折腾记录</title><link>https://liangkang233.github.io/2021/11/%E5%8D%8E%E4%B8%BA%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%8A%98%E8%85%BE%E8%AE%B0%E5%BD%95/</link><pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate><guid>https://liangkang233.github.io/2021/11/%E5%8D%8E%E4%B8%BA%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%8A%98%E8%85%BE%E8%AE%B0%E5%BD%95/</guid><description>最近在做一个关于应用上云的测试，于是看到有华为云的免费服务器试用就注册了一个，记录下操作备忘。 个人用户实名注册即可领取一个低性能的2核4g的</description></item><item><title>五大基本算法</title><link>https://liangkang233.github.io/2021/11/%E4%BA%94%E5%A4%A7%E5%B8%B8%E8%A7%81%E7%AE%97%E6%B3%95/</link><pubDate>Thu, 04 Nov 2021 00:00:00 +0000</pubDate><guid>https://liangkang233.github.io/2021/11/%E4%BA%94%E5%A4%A7%E5%B8%B8%E8%A7%81%E7%AE%97%E6%B3%95/</guid><description>先简单介绍几个基础概念： 递归 递归是重复调用函数自身实现循环。迭代是函数内某段代码实现循环。 其中，迭代与普通循环的区别是：迭代时，循环代码中参</description></item><item><title>Go内存模型</title><link>https://liangkang233.github.io/2021/10/go%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B/</link><pubDate>Thu, 28 Oct 2021 00:00:00 +0000</pubDate><guid>https://liangkang233.github.io/2021/10/go%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B/</guid><description>内存模型 对于C/C++ 等语言来说，内存空间大致使用在 栈区（stack）：又编译器自动分配释放，存放函数的参数值，局部变量的值等，其操作方式类</description></item><item><title>数据结构-树状数组</title><link>https://liangkang233.github.io/2021/10/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/</link><pubDate>Fri, 22 Oct 2021 00:00:00 +0000</pubDate><guid>https://liangkang233.github.io/2021/10/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/</guid><description>如果需要快速的求多次 一个数组A内的 某些区间和，最快的方法是用前缀和来记录为数组B 差分数组的主要适用场景是频繁对原始数组的某个区间的元素进⾏增</description></item><item><title>并查集、堆(优先队列)</title><link>https://liangkang233.github.io/2021/10/%E5%B9%B6%E6%9F%A5%E9%9B%86%E5%A0%86%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/</link><pubDate>Tue, 05 Oct 2021 00:00:00 +0000</pubDate><guid>https://liangkang233.github.io/2021/10/%E5%B9%B6%E6%9F%A5%E9%9B%86%E5%A0%86%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/</guid><description>并查集 并查集是一种树形的数据结构，用于处理不交集（Disjoint sets）的合并和查询问题。 案例：初始状态n个元素，每个元素位于独立的集合</description></item></channel></rss>